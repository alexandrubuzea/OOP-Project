Starting audit...
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:17:1: Class Database should be declared as final. [FinalClass]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:21:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:26:36: Parameter database should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:36:33: Parameter input should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:78:29: Parameter newGifts should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:88:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:88:32: Parameter newChildren should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:90:46: '18' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:96:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:96:30: Parameter newBudget should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:100:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:100:38: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:110:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:116:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:119:54: '18' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:125:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:125:29: Parameter change should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/database/Database.java:126:18: 'database' hides a field. [HiddenField]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:1:9: Name 'roundStatus' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:9:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:14:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'getGlobalStatus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'getGlobalStatus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:26:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'calculateAverageScores' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'calculateAverageScores' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:29: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:33:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'calculateAssignedBudgets' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'calculateAssignedBudgets' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:37: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:44:5: Class 'Round' looks like designed for extension (can be subclassed), but the method 'assignGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Round' final or making the method 'assignGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/Round.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:1:9: Name 'roundStatus' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:12:5: Class 'ChildStatus' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStatus' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:16:5: Class 'ChildStatus' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStatus' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:16:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:22:5: Class 'ChildStatus' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStatus' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:26:5: Class 'ChildStatus' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStatus' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:26:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:32:5: Class 'ChildStatus' looks like designed for extension (can be subclassed), but the method 'getGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStatus' final or making the method 'getGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:38:5: Class 'ChildStatus' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStatus' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:42:5: Class 'ChildStatus' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStatus' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:42:35: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/roundStatus/ChildStatus.java:46:24: Parameter child should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/utils/Utils.java:5:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/utils/Utils.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/utils/Utils.java:8:34: Parameter list should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/utils/Utils.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/utils/Utils.java:12:42: Parameter list should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/utils/Utils.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/utils/Utils.java:22:33: Parameter list should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/GiftInputData.java:10:5: Class 'GiftInputData' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInputData' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/GiftInputData.java:14:5: Class 'GiftInputData' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInputData' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/GiftInputData.java:14:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/GiftInputData.java:21:5: Class 'GiftInputData' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInputData' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/GiftInputData.java:25:5: Class 'GiftInputData' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInputData' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/GiftInputData.java:25:26: Parameter price should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/GiftInputData.java:32:5: Class 'GiftInputData' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInputData' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/GiftInputData.java:36:5: Class 'GiftInputData' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInputData' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/GiftInputData.java:36:29: Parameter category should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildUpdateInputData.java:12:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildUpdateInputData.java:16:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildUpdateInputData.java:16:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildUpdateInputData.java:23:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildUpdateInputData.java:27:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildUpdateInputData.java:27:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildUpdateInputData.java:34:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'getPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildUpdateInputData.java:38:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'setPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildUpdateInputData.java:38:32: Parameter preferences should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:11:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:15:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:15:34: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:22:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:26:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:26:32: Parameter santaBudget should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:33:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:37:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:37:32: Parameter initialData should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:44:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:48:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InputData.java:48:28: Parameter changes should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:13:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:17:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:17:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:24:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:28:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:28:29: Parameter lastName should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:35:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:39:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:39:30: Parameter firstName should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:46:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:50:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:50:24: Parameter age should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:57:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:61:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:61:25: Parameter city should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:68:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:72:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:72:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:79:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:83:5: Class 'ChildInputData' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInputData' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChildInputData.java:83:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InitialData.java:10:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'getChildrenInputData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'getChildrenInputData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InitialData.java:14:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'setChildrenInputData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'setChildrenInputData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InitialData.java:14:38: Parameter childrenInputData should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InitialData.java:21:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'getGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'getGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InitialData.java:25:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'setGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'setGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/InitialData.java:25:26: Parameter gifts should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:11:5: Class 'ChangeInputData' looks like designed for extension (can be subclassed), but the method 'getNewBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeInputData' final or making the method 'getNewBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:15:5: Class 'ChangeInputData' looks like designed for extension (can be subclassed), but the method 'setNewBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeInputData' final or making the method 'setNewBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:15:30: Parameter newBudget should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:22:5: Class 'ChangeInputData' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeInputData' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:26:5: Class 'ChangeInputData' looks like designed for extension (can be subclassed), but the method 'setNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeInputData' final or making the method 'setNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:26:29: Parameter newGifts should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:33:5: Class 'ChangeInputData' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeInputData' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:37:5: Class 'ChangeInputData' looks like designed for extension (can be subclassed), but the method 'setNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeInputData' final or making the method 'setNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:37:32: Parameter newChildren should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:44:5: Class 'ChangeInputData' looks like designed for extension (can be subclassed), but the method 'getUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeInputData' final or making the method 'getUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:48:5: Class 'ChangeInputData' looks like designed for extension (can be subclassed), but the method 'setUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeInputData' final or making the method 'setUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/input/ChangeInputData.java:48:28: Parameter updates should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:16:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:22:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:28:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:34:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:38:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'incrementAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'incrementAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:44:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:50:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScores' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScores' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:56:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:60:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'addNewPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'addNewPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:60:35: Parameter toAdd should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:74:18: Parameter child should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:86:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAgeCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAgeCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:90:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'applyChange' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'applyChange' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:90:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:90:29: Parameter update should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:98:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Child.java:98:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Gift.java:9:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Gift.java:15:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Gift.java:21:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Gift.java:25:17: Parameter gift should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Gift.java:31:17: Parameter gift should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/ChildUpdate.java:11:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/ChildUpdate.java:17:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/ChildUpdate.java:23:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNewPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNewPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/ChildUpdate.java:27:24: Parameter childUpdate should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Change.java:14:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'getNewBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'getNewBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Change.java:20:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Change.java:26:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Change.java:32:5: Class 'Change' looks like designed for extension (can be subclassed), but the method 'getUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Change' final or making the method 'getUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/entities/Change.java:36:19: Parameter change should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/parser/MyFileParser.java:12:5: Class 'MyFileParser' looks like designed for extension (can be subclassed), but the method 'getInputFilePath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MyFileParser' final or making the method 'getInputFilePath' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/parser/MyFileParser.java:16:25: Parameter inputFilePath should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/parser/MyFileParser.java:24:5: Class 'MyFileParser' looks like designed for extension (can be subclassed), but the method 'parseJSONFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MyFileParser' final or making the method 'parseJSONFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/parser/MyFileParser.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/enums/AgeCategory.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/enums/AgeCategory.java:11:46: Parameter age should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/enums/AgeCategory.java:12:19: '5' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/enums/AgeCategory.java:14:26: '12' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/enums/AgeCategory.java:14:29: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/enums/AgeCategory.java:16:26: '19' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/writer/MyFileWriter.java:12:5: Class 'MyFileWriter' looks like designed for extension (can be subclassed), but the method 'getFilename' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MyFileWriter' final or making the method 'getFilename' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/writer/MyFileWriter.java:16:25: Parameter filename should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/writer/MyFileWriter.java:20:5: Class 'MyFileWriter' looks like designed for extension (can be subclassed), but the method 'writeJSONFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MyFileWriter' final or making the method 'writeJSONFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/writer/MyFileWriter.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/writer/MyFileWriter.java:20:31: Parameter output should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:10:8: Unused import - java.sql.Array. [UnusedImports]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:18:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:22:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:22:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:29:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:33:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:33:29: Parameter lastName should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:40:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:44:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:44:30: Parameter firstName should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:51:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:55:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:55:25: Parameter city should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:62:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:66:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:66:24: Parameter age should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:73:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'getPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'getPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:77:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'setPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'setPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:77:32: Parameter preferences should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:84:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:88:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:88:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:95:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:99:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'setNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'setNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:99:37: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:106:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:110:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:110:35: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:117:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'getGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'getGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:121:5: Class 'ChildOutputData' looks like designed for extension (can be subclassed), but the method 'setGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutputData' final or making the method 'setGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:121:26: Parameter gifts should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/ChildOutputData.java:125:28: Parameter status should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/GiftOutputData.java:11:5: Class 'GiftOutputData' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutputData' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/GiftOutputData.java:15:5: Class 'GiftOutputData' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutputData' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/GiftOutputData.java:15:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/GiftOutputData.java:22:5: Class 'GiftOutputData' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutputData' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/GiftOutputData.java:26:5: Class 'GiftOutputData' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutputData' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/GiftOutputData.java:26:26: Parameter price should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/GiftOutputData.java:33:5: Class 'GiftOutputData' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutputData' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/GiftOutputData.java:37:5: Class 'GiftOutputData' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutputData' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/GiftOutputData.java:37:29: Parameter category should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/GiftOutputData.java:41:27: Parameter gift should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/OutputData.java:12:5: Class 'OutputData' looks like designed for extension (can be subclassed), but the method 'getRounds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputData' final or making the method 'getRounds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/OutputData.java:16:5: Class 'OutputData' looks like designed for extension (can be subclassed), but the method 'setRounds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputData' final or making the method 'setRounds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/OutputData.java:16:27: Parameter rounds should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/RoundData.java:13:5: Class 'RoundData' looks like designed for extension (can be subclassed), but the method 'getChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RoundData' final or making the method 'getChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/RoundData.java:17:5: Class 'RoundData' looks like designed for extension (can be subclassed), but the method 'setChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RoundData' final or making the method 'setChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/RoundData.java:17:29: Parameter children should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/RoundData.java:21:22: Parameter round should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/output/RoundData.java:22: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/KidScoreStrategy.java:1:9: Name 'averageScore' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/KidScoreStrategy.java:6:55: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/KidScoreStrategy.java:9:5: Class 'KidScoreStrategy' looks like designed for extension (can be subclassed), but the method 'applyStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KidScoreStrategy' final or making the method 'applyStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/KidScoreStrategy.java:10:33: Parameter child should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/ScoreStrategy.java:1:9: Name 'averageScore' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/ScoreStrategy.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/ScoreStrategyFactory.java:1:9: Name 'averageScore' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/ScoreStrategyFactory.java:5:1: Class ScoreStrategyFactory should be declared as final. [FinalClass]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/ScoreStrategyFactory.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/ScoreStrategyFactory.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/ScoreStrategyFactory.java:18:46: Parameter category should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/AdultScoreStrategy.java:1:9: Name 'averageScore' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/AdultScoreStrategy.java:5:57: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/AdultScoreStrategy.java:8:5: Class 'AdultScoreStrategy' looks like designed for extension (can be subclassed), but the method 'applyStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdultScoreStrategy' final or making the method 'applyStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/AdultScoreStrategy.java:9:33: Parameter child should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/TeenScoreStrategy.java:1:9: Name 'averageScore' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/TeenScoreStrategy.java:6:56: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/TeenScoreStrategy.java:9:5: Class 'TeenScoreStrategy' looks like designed for extension (can be subclassed), but the method 'applyStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TeenScoreStrategy' final or making the method 'applyStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/TeenScoreStrategy.java:10:33: Parameter child should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/BabyScoreStrategy.java:1:9: Name 'averageScore' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/BabyScoreStrategy.java:8:5: Class 'BabyScoreStrategy' looks like designed for extension (can be subclassed), but the method 'applyStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BabyScoreStrategy' final or making the method 'applyStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/BabyScoreStrategy.java:9:33: Parameter child should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/averageScore/BabyScoreStrategy.java:10:16: '10' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/main/TestSolver.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/main/TestSolver.java:20:5: Class 'TestSolver' looks like designed for extension (can be subclassed), but the method 'solveTest' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TestSolver' final or making the method 'solveTest' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/main/TestSolver.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/main/TestSolver.java:20:27: Parameter testNumber should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/main/TestSolver.java:32: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/main/TestSolver.java:34:11: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/main/TestSolver.java:37:11: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/main/TestSolver.java:46:11: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] /home/alexandru/Desktop/POO/OOP-Project/proiect1/./src/main/Main.java:22:58: ')' is preceded with whitespace. [ParenPad]
Audit done.
Checkstyle ends with 249 errors.
