Starting audit...
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/database/Database.java:131:29: Parameter strategy should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/input/GiftInputData.java:94:29: Parameter quantity should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/input/ChildUpdateInputData.java:99:27: Parameter newElf should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/input/ChildInputData.java:187:24: Parameter elf should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/input/ChildInputData.java:210:35: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/input/ChangeInputData.java:119:29: Parameter strategy should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:23:1: Class Child should be declared as final. [FinalClass]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:155:24: Parameter elf should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:170:29: Parameter child should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:188:9: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'niceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'niceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:188:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:188:44: Parameter score should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:198:9: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'build' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'build' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:198:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:214: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:224:19: Parameter builder should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:268:57: '100' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:269:41: '10.0' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:272:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:272:29: Parameter status should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Gift.java:72:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Gift.java:73:27: Parameter o should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Gift.java:74:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Gift.java:75:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Gift.java:81:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/ChildUpdate.java:60:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNewElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNewElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/enums/Cities.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/ElfStrategy.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/ElfStrategy.java:6:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/BlackElfStrategy.java:7:5: Class 'BlackElfStrategy' looks like designed for extension (can be subclassed), but the method 'applyGiftStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BlackElfStrategy' final or making the method 'applyGiftStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/BlackElfStrategy.java:8:35: Parameter status should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/BlackElfStrategy.java:10:28: '30' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/BlackElfStrategy.java:10:33: '100' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/PinkElfStrategy.java:7:5: Class 'PinkElfStrategy' looks like designed for extension (can be subclassed), but the method 'applyGiftStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PinkElfStrategy' final or making the method 'applyGiftStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/PinkElfStrategy.java:8:35: Parameter status should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/PinkElfStrategy.java:10:28: '30' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/PinkElfStrategy.java:10:33: '100' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/WhiteElfStrategy.java:7:35: Parameter status should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/YellowElfStrategy.java:14:5: Class 'YellowElfStrategy' looks like designed for extension (can be subclassed), but the method 'applyGiftStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YellowElfStrategy' final or making the method 'applyGiftStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/YellowElfStrategy.java:15:35: Parameter status should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/ElfStrategyFactory.java:5:1: Class ElfStrategyFactory should be declared as final. [FinalClass]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/ElfStrategyFactory.java:8:32: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/ElfStrategyFactory.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/ElfStrategyFactory.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/ElfStrategyFactory.java:18:42: Parameter elf should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/output/ChildOutputData.java:246: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/GiftAssignmentStrategyFactory.java:5:1: Class GiftAssignmentStrategyFactory should be declared as final. [FinalClass]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/GiftAssignmentStrategyFactory.java:6:49: Variable 'factory' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/GiftAssignmentStrategyFactory.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/GiftAssignmentStrategyFactory.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/GiftAssignmentStrategyFactory.java:18:50: Parameter strategy should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/IdGiftAssignmentStrategy.java:10:5: Class 'IdGiftAssignmentStrategy' looks like designed for extension (can be subclassed), but the method 'applyAssignmentStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IdGiftAssignmentStrategy' final or making the method 'applyAssignmentStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/IdGiftAssignmentStrategy.java:11:50: Parameter round should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/GiftAssignmentStrategy.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/GiftAssignmentStrategy.java:8:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/CityGiftAssignmentStrategy.java:9:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/CityGiftAssignmentStrategy.java:14:5: Class 'CityGiftAssignmentStrategy' looks like designed for extension (can be subclassed), but the method 'applyAssignmentStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CityGiftAssignmentStrategy' final or making the method 'applyAssignmentStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/CityGiftAssignmentStrategy.java:15:50: Parameter round should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/NiceScoreGiftAssignmentStrategy.java:9:5: Class 'NiceScoreGiftAssignmentStrategy' looks like designed for extension (can be subclassed), but the method 'applyAssignmentStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NiceScoreGiftAssignmentStrategy' final or making the method 'applyAssignmentStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/giftassignmentstrategies/NiceScoreGiftAssignmentStrategy.java:10:50: Parameter round should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/roundstatus/Round.java:7:8: Unused import - entities.Gift. [UnusedImports]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/roundstatus/Round.java:8:8: Unused import - enums.Category. [UnusedImports]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/roundstatus/Round.java:14:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/roundstatus/Round.java:96: Line is longer than 100 characters (found 107). [LineLength]
Audit done.
Checkstyle ends with 64 errors.
