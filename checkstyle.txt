Starting audit...
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/database/Database.java:131:29: Parameter strategy should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/input/GiftInputData.java:94:29: Parameter quantity should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/input/ChildUpdateInputData.java:99:27: Parameter newElf should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/input/ChildInputData.java:187:24: Parameter elf should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/input/ChildInputData.java:210:35: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/input/ChangeInputData.java:119:29: Parameter strategy should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:20:1: Class Child should be declared as final. [FinalClass]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:152:24: Parameter elf should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:167:29: Parameter child should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:185:9: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'niceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'niceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:185:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:185:44: Parameter score should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:195:9: Class 'ChildBuilder' looks like designed for extension (can be subclassed), but the method 'build' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildBuilder' final or making the method 'build' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:195:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:211: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:221:19: Parameter builder should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:264:57: '100' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Child.java:265:41: '10.0' is a magic number. [MagicNumber]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Gift.java:72:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Gift.java:73:27: Parameter o should be final. [FinalParameters]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Gift.java:74:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Gift.java:75:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/Gift.java:81:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/entities/ChildUpdate.java:60:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNewElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNewElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/ElfStrategy.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/elfstrategies/ElfStrategy.java:6:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/output/ChildOutputData.java:246: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/alexandru/Desktop/POO/proiect1/./src/roundstatus/Round.java:9:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
Audit done.
Checkstyle ends with 28 errors.
